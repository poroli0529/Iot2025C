[라즈베리파이 업데이트]
sudo apt update
sudo apt upgrade
// 수업 초반 influxdb를 설치하려던 도중 라즈베리파이 업데이트가 안되어있어서 설치하지 못하는 일이 있었음. 
// 고로 라즈베리가 업데이트가 되어있어야 다른 파일들도 설치시에 제약 조건이 줄어든다는 것을 알 수 있었다.

[InfluxDB 설치]
wget -q https://repos.influxdata.com/influxdata-archive_compat.key
echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list

[Packages are up to date && install Influxdb | 패키지 최신화 및 influxdb설치]
 sudo apt-get update && sudo apt-get install influxdb -y

[InfluxDB as a background service on startup | influxDB 시작]
sudo service influxdb start

[InfluxDB is status (service) | influxDB 현 상태 (잘연결되어 있는지?)] 
sudo service influxdb status

influx db 데이터 베이스 생성 
$ influx

>create database <데이터베이스이름>
확인 : show databases 

[Grafana 설치를 위한 사전 준비 패키지 설치]
HTTPS 저장소 접근과 외부 저장소 관리에 필요한 필수 도구(apt-transport-https, software-properties-common, wget)를 설치합니다.
sudo apt-get install -y apt-transport-https software-properties-common wget

--------------------------------------------------------------------------------------------------------------------------------------------


python 라즈베리 파이 연동 

센서 연결: serial.Serial('/dev/ttyACM0', baudrate=9600) — 아두이노나 다른 시리얼 장치로부터 데이터 수신.
데이터 읽기 및 파싱:

content = seri.readline()
a = float(content.decode())
시리얼 포트로부터 값을 읽고 float형으로 변환.

InfluxDB에 저장할 데이터 형식 구성:

data = [{
    "measurement": "dust1",
    "tags": {"InhaUni": "12321"},
    "fields": {"dust": a}
}]
InfluxDB 클라이언트 연결 및 데이터 저장 시도:

client = influxdb('localhost', 8086, 'root', 'root', 'dust1')
client.write_points(data)

이 코드를 저장하고 실행한 후 !!
그라파나 사이트에 접속해서 influxDB를 설정해주고 테스트를 한다.
그라파나는 장비로부터 받은 데이터를 시각화해주는 사이트이다.
[ 코드 전문 ]
import time
import serial
from influxdb import InfluxDBClient

# 시리얼 포트 연결
try:
    seri = serial.Serial('/dev/ttyACM0', baudrate=9600, timeout=None)
except Exception as e:
    print("Serial connection failed:", e)
    exit()

# InfluxDB 클라이언트 초기화
try:
    client = InfluxDBClient(host='localhost', port=8086, username='root', password='root', database='dust1')
except Exception as e:
    print("InfluxDB connection failed:", e)
    exit()

while True:
    time.sleep(1)
    if seri.in_waiting != 0:
        try:
            content = seri.readline()
            a = float(content.decode().strip())

            data = [{
                "measurement": "dust1",
                "tags": {"InhaUni": "12321"},
                "fields": {"dust": a}
            }]

            client.write_points(data)
            print(a, "- running influxdb OK")
        except Exception as e:
            print("Error:", e)

12주차는 이렇게 마무리 지었다.
